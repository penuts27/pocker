{"version":3,"sources":["all.js"],"names":["Symbols","GAME_STATE","FirstCardAwaits","SecondCardAwaits","CardsMatchFailed","CardsMatched","GameFinished","utility","getRandomNumberArray","count","number","Array","from","keys","index","length","randomIndex","Math","floor","random","view","getCardContent","transformNumber","suit","getCardElement","displayCard","indexs","rawHtml","map","element","join","roofElement","document","querySelector","innerHTML","flipCards","cards","card","matches","classList","remove","dataset","add","pairedCards","console","log","forEach","renderScore","score","innerText","renderTried","tried","appendWrongAnimation","addEventListener","e","target","once","showGameFinished","div","createElement","model","triedTimes","header","before","revealedCard","isReaveledCardsMatched","controller","currentState","generatCards","dispatchCardAction","push","setTimeout","reset","querySelectorAll"],"mappings":"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","file":"all.js","sourcesContent":["const Symbols = [\n  'https://image.flaticon.com/icons/svg/105/105223.svg', // 黑桃\n  'https://image.flaticon.com/icons/svg/105/105220.svg', // 愛心\n  'https://image.flaticon.com/icons/svg/105/105212.svg', // 方塊\n  'https://image.flaticon.com/icons/svg/105/105219.svg' // 梅花\n]\nconst GAME_STATE = {\n  FirstCardAwaits: 'FirstCardAwaits',\n  SecondCardAwaits: 'SecondCardAwaits',\n  CardsMatchFailed: 'CardsMatchFailed',\n  CardsMatched: 'CardsMatched',\n  GameFinished: 'GameFinished'\n}\nconst utility = {\n  getRandomNumberArray(count) {\n    const number = Array.from(Array(count).keys())\n    for (let index = number.length - 1; index > 0; index--) {\n      const randomIndex = Math.floor(Math.random() * (index + 1))\n        ;[number[index], number[randomIndex]] = [number[randomIndex], number[index]]\n    }\n    return number\n  }\n}\nconst view = {\n  getCardContent(index) {\n    const number = this.transformNumber((index % 13) + 1)\n    const suit = Symbols[Math.floor(index / 13)]\n    return `\n      <p>${number}</p>\n      <img src=${suit} alt=\"suit圖示\">\n      <p>${number}</p>`\n  },\n  getCardElement(index) {\n    return `<div class=\"card back\" data-number='${index}'></div>`\n  },\n  displayCard(indexs) {\n    const rawHtml = indexs.map(element => this.getCardElement(element)).join('')\n    const roofElement = document.querySelector('#cards')\n    roofElement.innerHTML = rawHtml\n  },\n  flipCards(...cards) {\n    cards.map(card => {\n      // 如果是反面\n      if (card.matches('.back')) {\n        card.classList.remove('back')\n        card.innerHTML = this.getCardContent(card.dataset.number)\n        return\n      }\n      card.classList.add('back')\n      card.innerHTML = null\n    })\n  },\n  transformNumber(index) {\n    // 11J 12Q 13K\n    switch (index) {\n      case 1:\n        return 'A'\n      case 11:\n        return 'J'\n      case 12:\n        return 'Q'\n      case 13:\n        return 'K'\n      default:\n        return index\n    }\n  },\n  pairedCards(...cards) {\n    console.log('cards', cards)\n    cards.forEach(card => card.classList.add('paired'))\n  },\n  renderScore(score) {\n    document.querySelector('.header__score span').innerText = score\n  },\n  renderTried(tried) {\n    document.querySelector('.header__tried span').innerText = tried\n  },\n  appendWrongAnimation(...cards) {\n    cards.map(card => {\n      card.classList.add('wrong')\n      card.addEventListener('animationend', e => e.target.classList.remove('wrong'), { once: true })\n    })\n  },\n  showGameFinished() {\n    const div = document.createElement('div')\n    div.classList.add('completed')\n    div.innerHTML = `\n    <p>Complete!</p>\n    <p>Score: ${model.score}</p>\n    <p>You've tried: ${model.triedTimes} times</p>\n    `\n    const header = document.querySelector('#header')\n    header.before(div)\n  }\n}\n\nconst model = {\n  revealedCard: [],\n  isReaveledCardsMatched() {\n    return this.revealedCard[0].dataset.number % 13 === this.revealedCard[1].dataset.number % 13\n  },\n  score: 0,\n  triedTimes: 0\n}\nconst controller = {\n  currentState: GAME_STATE.FirstCardAwaits,\n  generatCards() {\n    view.displayCard(utility.getRandomNumberArray(52))\n  },\n  dispatchCardAction(card) {\n    if (!card.matches('.back')) { return }\n    switch (this.currentState) {\n      case GAME_STATE.FirstCardAwaits:\n        view.flipCards(card)\n        model.revealedCard.push(card)\n        this.currentState = GAME_STATE.SecondCardAwaits\n        break\n      case GAME_STATE.SecondCardAwaits:\n        view.renderTried(model.triedTimes += 1)\n        view.flipCards(card)\n        model.revealedCard.push(card)\n        // 比對是否正確\n        if (model.isReaveledCardsMatched()) {\n          // 比對正確\n          view.renderScore(model.score += 10)\n          this.currentState = GAME_STATE.CardsMatched\n          view.pairedCards(...model.revealedCard)\n          model.revealedCard = []\n          if (model.score >= 260) {\n            this.currentState = GAME_STATE.GameFinished\n            view.showGameFinished()\n            return\n          }\n          this.currentState = GAME_STATE.FirstCardAwaits\n        } else {\n          // 比對失敗\n          this.currentState = GAME_STATE.CardsMatchFailed\n          view.appendWrongAnimation(...model.revealedCard)\n          setTimeout(this.reset, 1000)\n        }\n        break\n    }\n    console.log('currentState', this.currentState)\n    console.log('revealedCard', model.revealedCard)\n  },\n  reset() {\n    console.log('reset')\n    view.flipCards(...model.revealedCard)\n    model.revealedCard = []\n    controller.currentState = GAME_STATE.FirstCardAwaits\n  }\n}\ncontroller.generatCards()\ndocument.querySelectorAll('.card').forEach(card => {\n  card.addEventListener('click', function () {\n    controller.dispatchCardAction(card)\n  })\n})\n"]}